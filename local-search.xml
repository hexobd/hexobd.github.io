<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/04/12/python_practice2/"/>
    <url>/2024/04/12/python_practice2/</url>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: &#x27;&#x27;&#x27;python_practice2&#x27;&#x27;&#x27;<br>date: 2024<span class="hljs-string">-04</span><span class="hljs-string">-12</span> 22:00:00<br><span class="hljs-keyword">tags:</span><br>categories: python<br></code></pre></td></tr></table></figure><h2 id="practice1"><a href="#practice1" class="headerlink" title="practice1"></a>practice1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">从键盘读入一个数n，输出小于或等于n的所有素数的个数。<br>example<br><span class="hljs-built_in">input</span>:<br><span class="hljs-number">100</span><br>output:<br><span class="hljs-number">25</span><br><span class="hljs-built_in">input</span>:<br><span class="hljs-number">200</span><br>output:<br><span class="hljs-number">46</span><br></code></pre></td></tr></table></figure><p>这个题目简单明了，是一个求小于等于它以内的素数个数，此时的逻辑应该是我们要定义一个函数先进行判断是否为素数，然后再用计数器用来计数即可。其实直接用</p><p>Crypto库里的isPrime函数直接一劳永逸。但这里我还是尝试手搓了一下函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">isprime</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,n):<br>        <span class="hljs-keyword">if</span> n % i == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>isprime(n)<br>count =<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,n+<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">if</span> isprime(j) == <span class="hljs-literal">True</span>:<br>        count +=<span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(count)<br></code></pre></td></tr></table></figure><h2 id="practice2"><a href="#practice2" class="headerlink" title="practice2"></a>practice2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">从键盘输入一个正整数n，输出小于n的所有与其互素的数的个数。（即求（n）的值）。例如：与<span class="hljs-number">10</span>互素的数为：<span class="hljs-number">9</span>,<span class="hljs-number">7</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>一共<span class="hljs-number">4</span>个。<br></code></pre></td></tr></table></figure><p>这个题目明显是欧拉函数，如果在sage里面可以直接用euler_phi的函数，那么这里面我们需要在明白欧拉函数后再进行写，这里不做赘述。直接上代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">euler_phi</span>(<span class="hljs-params">n</span>):<br>    result = n   <br>    p = <span class="hljs-number">2</span><br>    <span class="hljs-keyword">while</span>(p * p &lt;= n):<br>        <span class="hljs-keyword">if</span> (n % p == <span class="hljs-number">0</span>):<br>            <span class="hljs-keyword">while</span> (n % p == <span class="hljs-number">0</span>):<br>                n //= p<br>            result -= result // p<br>        p += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>):     <br>        result -= result // n<br>    <span class="hljs-built_in">print</span>(result)<br>euler_phi(n)<br></code></pre></td></tr></table></figure><h2 id="practice3"><a href="#practice3" class="headerlink" title="practice3"></a>practice3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">从键盘接受一个正整数n，生成一个由<span class="hljs-number">1</span>~n的数组。输出一个数组，数组中的每个元素为与前面数组中小于自身的互素的数的个数。<br><br>example:<br><span class="hljs-built_in">input</span>:<br><span class="hljs-number">10</span><br>output:<br>[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>]<br><span class="hljs-built_in">input</span>:<br><span class="hljs-number">20</span><br>output:<br>[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">16</span>, <span class="hljs-number">6</span>, <span class="hljs-number">18</span>, <span class="hljs-number">8</span>]<br></code></pre></td></tr></table></figure><h3 id="生成1-n的数组"><a href="#生成1-n的数组" class="headerlink" title="生成1-n的数组"></a>生成1-n的数组</h3><p>开始的时候我们可以用列表解析对我们平常写的代码进行一个优化：</p><ul><li><p>基本语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">[expression <span class="hljs-keyword">for</span> iter_val <span class="hljs-keyword">in</span> iterable]<br>[expression <span class="hljs-keyword">for</span> iter_val <span class="hljs-keyword">in</span> iterable <span class="hljs-keyword">if</span> cond_expr]<br></code></pre></td></tr></table></figure></li></ul><p>该优化可以在列表解析，筛选条件，嵌套循环，字典解析，集合解析中进行使用。</p><p>例如1-n我们可以用i for i in range(n+1)。</p><p>回到这道题目上面，因为要判断互质我们可以自己手搓一个gcd函数，也可以用math库里的gcd函数。这里我直接用math库里的gcd函数进行书写。然后通过挨个的互质判断确定个数。因为你这里要考虑到挨个进行比大小，所以一个循环是不够的我们可以考虑循环嵌套(就是大循环所在的数与自己前面的所有数进行互质判断)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> math<br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>l1 = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, n+<span class="hljs-number">1</span>)]<br>l2 = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, n+<span class="hljs-number">1</span>):<br>    count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, i):<br>        <span class="hljs-keyword">if</span> math.gcd(l1[i-<span class="hljs-number">1</span>], l1[j-<span class="hljs-number">1</span>]) == <span class="hljs-number">1</span>:<span class="hljs-comment">#这里采取i-1,j-1是因为不要超出范围</span><br>            count += <span class="hljs-number">1</span><br>    l2.append(count)<br><span class="hljs-built_in">print</span>(l2)<br></code></pre></td></tr></table></figure><h2 id="practice4"><a href="#practice4" class="headerlink" title="practice4"></a>practice4</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">从键盘输入一个<span class="hljs-built_in">n</span>，打印一个等腰三角形。<br></code></pre></td></tr></table></figure><p>这个题目很明显是循环。而且等腰三角形1，3，5，7……明显是一个等差数列，但是如果只是考虑等差数列的话会发现你会打印出来的是个直角三角形。仔细思考，发现空格也是等差数列排布，与*的等差数列是恰好相反的。所以我们就可以同时用一个循环进行打印，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, n + <span class="hljs-number">1</span>):<br>    spaces = <span class="hljs-string">&#x27; &#x27;</span> * (n - i)<br>    stars = <span class="hljs-string">&#x27;*&#x27;</span> * (<span class="hljs-number">2</span> * i - <span class="hljs-number">1</span>)<br>    <span class="hljs-built_in">print</span>(spaces + stars)<br></code></pre></td></tr></table></figure><h2 id="practice-5"><a href="#practice-5" class="headerlink" title="practice 5"></a>practice 5</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">从键盘输入一个<span class="hljs-built_in">n</span>，打印菱形<br></code></pre></td></tr></table></figure><p>这里的菱形借用了上道等腰三角形的思路，以中间最长的那行为界限，我们很容易想到把上面的代码给逆回来进行逐级递减即可。代码实现如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"> <br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, n + <span class="hljs-number">1</span>):<br>    spaces = <span class="hljs-string">&#x27; &#x27;</span> * (n - i)<br>    stars = <span class="hljs-string">&#x27;*&#x27;</span> * (<span class="hljs-number">2</span> * i - <span class="hljs-number">1</span>)<br>    <span class="hljs-built_in">print</span>(spaces + stars)<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>):<br>    spaces = <span class="hljs-string">&#x27; &#x27;</span>*(n-j)<br>    stars = <span class="hljs-string">&#x27;*&#x27;</span>*(<span class="hljs-number">2</span>*j-<span class="hljs-number">1</span>)<br>    <span class="hljs-built_in">print</span>(spaces+stars)<br></code></pre></td></tr></table></figure><h2 id="practice6"><a href="#practice6" class="headerlink" title="practice6"></a>practice6</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">从键盘接收一个<span class="hljs-built_in">n</span>，用来确定数组包含的元素个数。并循环读入<span class="hljs-built_in">n</span>个数字字符，将其转换成<span class="hljs-built_in">int</span>型数据，存储在数组中。编写一个程序，让数组中，相邻的两位进行比较，并将比较大的数字交换到后面的位置，将数组中相邻的两位依次比较，确保经过一轮比较后，数组中最大的数字放在索引为<span class="hljs-built_in">n</span>-<span class="hljs-number">1</span>的位置上。输出此时最大值在索引最大位置上的数组。<br></code></pre></td></tr></table></figure><p>这个题目我们只需要根据题目的叙述来比较每个数与下个数进行比较，如果大于那么就直接进行交换位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>l =[]<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    l.append(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>()))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n-<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">if</span> l[i] &gt; l[i+<span class="hljs-number">1</span>]:<br>        l[i],l[i+<span class="hljs-number">1</span>] = l[i+<span class="hljs-number">1</span>],l[i]<br><span class="hljs-built_in">print</span>(l)<br></code></pre></td></tr></table></figure><h2 id="practice-7"><a href="#practice-7" class="headerlink" title="practice 7"></a>practice 7</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">从键盘接收一个<span class="hljs-built_in">n</span>，代表当前数组中包含的元素个数。依次从键盘读入<span class="hljs-built_in">n</span>个数据，并转换成<span class="hljs-built_in">int</span>型，保存在数组中。按照上题的方法整理数组中的元素，将数组中元素整理为从小到大有序的数组输出。（注：不允许使用内置的排序函数，或方法）<br></code></pre></td></tr></table></figure><p>这个题目有限制，那么我们应该考虑的是将每个数都作比较，然后如果前面的数大于后面的数那么就可以进行交换位置。这样子便可以达到从小到大排序的效果了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>l =[]<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    l.append(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>()))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(l)):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i,<span class="hljs-built_in">len</span>(l)):<br>        <span class="hljs-keyword">if</span> l[i] &gt; l[j]:<br>            l[i],l[j] = l[j],l[i]<br><span class="hljs-built_in">print</span>(l)<br></code></pre></td></tr></table></figure><h2 id="practice-8"><a href="#practice-8" class="headerlink" title="practice 8"></a>practice 8</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">从键盘接收一个m，代表二维数组的行数，再从键盘接收一个n，代表二维数组的列数。利用循环读入二维数组所有的数值，并转换为<span class="hljs-built_in">int</span>类型，存在数组中。输出该二维数组。<br></code></pre></td></tr></table></figure><p>这个题目比较简单就直接在代码里呈现思路了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">l = []<br>m = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>    row = []<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        row.append(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>()))<br>    l.append(row)<br><span class="hljs-built_in">print</span>(l)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/03/31/weeding_out_wp/"/>
    <url>/2024/03/31/weeding_out_wp/</url>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title:  淘汰赛wp<br>date: 2024<span class="hljs-string">-03</span><span class="hljs-string">-07</span> 20:25:37<br><span class="hljs-keyword">tags:</span><br>categories: test latex<br><br></code></pre></td></tr></table></figure><h2 id="coopersmith"><a href="#coopersmith" class="headerlink" title="coopersmith"></a>coopersmith</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n = p * q<br>e = <span class="hljs-number">65537</span><br>leak = p &gt;&gt; <span class="hljs-number">230</span><br>m = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-built_in">print</span>(leak)<br><span class="hljs-built_in">print</span>(c)<br><br><span class="hljs-comment"># 127487634441822647618921402280922476033495811135773828400328169329293220234120095610909277602078747155947008297834935187621004367643756134843425271809892298184723715973561289754668066516603254420282334094941388978211024661301950244658944432982403835994085656383051504008857560806480682989587000159542043574971</span><br><span class="hljs-comment"># 6078231756815313036870193890028171492100730070094563676243397437648271870084893809022</span><br><span class="hljs-comment"># 41917303148580748123210270152437064001027117042296600625752893484662028891408259680333109968488741007285041041895670863172632555107008206266174839958425512937043436196976931112103741557001942751999066915416294498808245716550493438455247624141216346257702085006987359774579885717399884632151959040337513452315</span><br></code></pre></td></tr></table></figure><p>这个题直接将epslion调为0.01即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>n= <span class="hljs-number">127487634441822647618921402280922476033495811135773828400328169329293220234120095610909277602078747155947008297834935187621004367643756134843425271809892298184723715973561289754668066516603254420282334094941388978211024661301950244658944432982403835994085656383051504008857560806480682989587000159542043574971</span><br>p= <span class="hljs-number">10487603455636619316909786944846467559617828599611305083536157673455794225615777154655562103868807511307400240901255666199622565210361286480346540339753143</span><br>q= <span class="hljs-number">12156031163945632168545435494299106150504297057639698134579866406999652413862781016117168731851976617184154589254282392935992059442124530549086029542240797</span><br>c = <span class="hljs-number">41917303148580748123210270152437064001027117042296600625752893484662028891408259680333109968488741007285041041895670863172632555107008206266174839958425512937043436196976931112103741557001942751999066915416294498808245716550493438455247624141216346257702085006987359774579885717399884632151959040337513452315</span><br>e =<span class="hljs-number">65537</span><br>phi = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d = inverse(e,phi)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#flag&#123;Welcome_to_the_knockout_rounds_in_February!Enjoy_your_game!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="论文题"><a href="#论文题" class="headerlink" title="论文题"></a>论文题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag, a, b, c, d, m, n<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>e = getPrime(<span class="hljs-number">128</span>)<br>N = p * q<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">pow</span>(a, <span class="hljs-number">2</span>) * m + <span class="hljs-built_in">pow</span>(b, <span class="hljs-number">2</span>) * n == N<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">pow</span>(c, <span class="hljs-number">2</span>) * m + <span class="hljs-built_in">pow</span>(d, <span class="hljs-number">2</span>) * n == N<br>flag = bytes_to_long(flag)<br>C = <span class="hljs-built_in">pow</span>(flag, e, N)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;C=&quot;</span>, C)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;N=&quot;</span>, N)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a=&quot;</span>, a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;b=&quot;</span>, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c=&quot;</span>, c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d=&quot;</span>, d)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;e=&#x27;</span>, e)<br><br><span class="hljs-comment"># C= 26979810735027385765377584703101653413098992546289136573826639005769212422842206974563416466184790997824389126508561113932712410845141909917367671130875947982738176444848673036737964189835669323506119157238526011813209469692144274190041448101974159848598133552490495936849218643373683745066336813353416506165</span><br><span class="hljs-comment"># N= 70043427687738872803871163276488213173780425282753969243938124727004843810522473265066937344440899712569316720945145873584064860810161865485251816597432836666987134938760506657782143983431621481190009008491725207321741725979791393566155990005404328775785526238494554357279069151540867533082875900530405903003</span><br><span class="hljs-comment"># a= 8369195163678456889416121467476480674288621867182572824570660596055739410903686466334448920102666056798356927389728982948229326705483052970212882852055482</span><br><span class="hljs-comment"># b= 25500181489306553053743739056022091355379036380919737553326529889338409847082228856006303427136881468093863020843230477979</span><br><span class="hljs-comment"># c= 8369195163678456889416121462308686152524805984209312455308229689034789710117101859597220211456125364647704791637845189120538925088375209397006380815921158</span><br><span class="hljs-comment"># d= 31448594528370020763962343185054872105044827103889010592635556324009793301024988530934510929565983517651356856506719032859</span><br><span class="hljs-comment"># e= 255348562315891975282864504628198394319</span><br></code></pre></td></tr></table></figure><p>下面有一个提示给出了论文</p><p>《A Note on Euler’s Factoring Problem-Brillhart_Euler_factoring_2009》</p><p>然后搜索会得到nss11的一道原题，直接把脚本改一下即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>c= <span class="hljs-number">26979810735027385765377584703101653413098992546289136573826639005769212422842206974563416466184790997824389126508561113932712410845141909917367671130875947982738176444848673036737964189835669323506119157238526011813209469692144274190041448101974159848598133552490495936849218643373683745066336813353416506165</span><br>N= <span class="hljs-number">70043427687738872803871163276488213173780425282753969243938124727004843810522473265066937344440899712569316720945145873584064860810161865485251816597432836666987134938760506657782143983431621481190009008491725207321741725979791393566155990005404328775785526238494554357279069151540867533082875900530405903003</span><br><br><br>a0= <span class="hljs-number">8369195163678456889416121467476480674288621867182572824570660596055739410903686466334448920102666056798356927389728982948229326705483052970212882852055482</span><br>a1= <span class="hljs-number">25500181489306553053743739056022091355379036380919737553326529889338409847082228856006303427136881468093863020843230477979</span><br>b0= <span class="hljs-number">8369195163678456889416121462308686152524805984209312455308229689034789710117101859597220211456125364647704791637845189120538925088375209397006380815921158</span><br>b1= <span class="hljs-number">31448594528370020763962343185054872105044827103889010592635556324009793301024988530934510929565983517651356856506719032859</span><br>e= <span class="hljs-number">255348562315891975282864504628198394319</span><br>p = gmpy2.gcd(a0 * b1 - a1 * b0, N)<br>q = N // p<br>phi = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br>d = gmpy2.invert(e, phi)<br>m = <span class="hljs-built_in">pow</span>(c, d, N)<br>flag = long_to_bytes(m)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#flag&#123;C0ngratu1ati0ns_0n_f1nding_the_r1ght_art1cle&#125;</span><br></code></pre></td></tr></table></figure><h2 id="ACD-AND-LCG"><a href="#ACD-AND-LCG" class="headerlink" title="ACD AND LCG"></a>ACD AND LCG</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>flag = bytes_to_long(flag)<br><br>m = getPrime(<span class="hljs-number">512</span>)<br>a = getPrime(<span class="hljs-number">512</span>)<br>b = getPrime(<span class="hljs-number">512</span>)<br>n = <span class="hljs-number">5</span><br>T = <span class="hljs-number">2</span> ** <span class="hljs-number">512</span><br>E = <span class="hljs-number">2</span> ** <span class="hljs-number">64</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>    flag = (a * flag + b) % m<br><br>t = [randint(<span class="hljs-number">1</span>, T) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n)]<br>e = [randint(<span class="hljs-number">1</span>, E) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n)]<br>x = [(t[i] * flag + e[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n)]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a =&#x27;</span>, a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;b =&#x27;</span>, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;m =&#x27;</span>, m)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;x =&#x27;</span>, x)<br><br><span class="hljs-comment"># a = 8701503235714654181185975273305680319448268607104190359674542225022655504341996813364987486169152127280096580678162752030947290834318177794541896954989271</span><br><span class="hljs-comment"># b = 11640974551844877011136648424234569173281653283747272384285516963171073747658473313135494572290659149574841279909831065905755830907871430395394192735120939</span><br><span class="hljs-comment"># m = 7651549587843496463117202160482742226772973264122759524886479760482818128954449531195306323978761655786591285266609745774698650146578870594639510913805479</span><br><span class="hljs-comment"># x = [23563826257718036440881317978673493810188106618102520794655809928555314811814029255966876253402519249737774672905329476492580161006527218026276548977886854950706391688637172839603715626748806618948958120644922647579126548959357008290497206695049760059149700363820646498084623694699472008631562172184210990035, 3113005430387527533023833300074500344357411532196342594002333236043816936302383608121940600702403163729786511802565803292142196335022994287751246769720617053925208039944042040670715259430068885488425648174582570328145049091823098815555090797666441011003507212742628216858263620482201418649823989017197834548, 6685479348073624502298121671534447705198177679782557105411467941369499437275400769469476486244770244844157821246716057708486824467234913104323190236794137920462993829477758373642412459677991492568200799570944294995694562592195858546636130648217228199436582187668528189147363195874596098090285349084227175548, 5239278303771955200403570451522564788180173532702160613414703002800320194961524203966622178324143348005313508702908594363287064236029432480748237226351482819059842053241222649049479134305843222159009334475944430484535918632919061089312813083990061343788537195597234369581898788642048806729865452838925446631, 6925083281090878674631701308341591801761921950839467193956461332365235701986587936731727133742351637156387143047408611637157566826208443914739489121644396744336707147012051411027678283619591917523171947099618995459141630255424338090872202325514203847254434442912426610649523183909748408668183830601718981590]</span><br></code></pre></td></tr></table></figure><p>这一题我们看到了这个最终的求解flag是一个LCG的题型，如果flag已知，那么就是a,b,n,c已知求解seed的题型。这样一来我们就明确思路要先去进行求解这个经过原始flag加密五次后的flag。</p><p>而且在题目中还给出了一个等式，</p><p>​<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="54.299ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 24000 950" xmlns:xlink="http://www.w3.org/1999/xlink"><defs></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="merror" data-mjx-error="Double subscripts: use braces to clarify"><rect data-background="true" width="24000" height="950" y="-200"></rect><g data-mml-node="mtext" style="font-family: serif;"><text data-variant="-explicitFont" transform="scale(1,-1)" font-size="773.5px">Double subscripts: use braces to clarify</text></g></g></g></g></svg></mjx-container></p><p><em>因为x</em>{i}、t_{i}、e_{i}都可以看成是一个矩阵，那么这种形式我们就需要构造格来求解p</p><p>那么这里我们就需要用到ACD了。</p><h3 id="ACD"><a href="#ACD" class="headerlink" title="ACD"></a>ACD</h3><p>​<mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -14.106ex;" xmlns="http://www.w3.org/2000/svg" width="275.32ex" height="29.344ex" role="img" focusable="false" viewBox="0 -6735 121691.5 12970" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-24" d="M162 187Q162 164 146 149T109 133H103V130Q108 115 115 105Q122 92 131 82T150 64T170 52T190 44T206 40T220 37L227 36V313Q190 320 162 335Q116 358 86 404T55 508Q55 567 85 614T165 685Q186 696 225 704H227V750H273V704L286 703Q369 690 413 631Q441 588 444 531Q444 514 443 509Q439 490 425 479T391 468Q368 468 353 483T337 522Q337 546 353 560T390 575L394 576V578Q386 599 372 614T342 637T314 649T288 656L273 658V408L288 405Q329 394 355 376Q396 348 420 300T444 199Q444 130 408 76T313 1Q286 -9 276 -9H273V-56H227V-10H221Q202 -6 193 -4T155 11T108 41T74 94T55 176V182Q55 227 95 238Q103 240 108 240Q129 240 145 226T162 187ZM225 657Q219 657 204 651T169 632T135 594T121 538Q121 512 131 491T156 457T187 435T213 423T227 420V539Q227 657 225 657ZM378 169Q378 230 339 265T274 301Q273 301 273 169V37Q324 50 351 87T378 169Z"></path><path id="MJX-1-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path><path id="MJX-1-TEX-I-1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-N-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path><path id="MJX-1-TEX-I-1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path><path id="MJX-1-TEX-N-2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path><path id="MJX-1-TEX-I-1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path><path id="MJX-1-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path><path id="MJX-1-TEX-I-1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-I-1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path><path id="MJX-1-TEX-I-1D6FD" d="M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z"></path><path id="MJX-1-TEX-I-1D6FE" d="M31 249Q11 249 11 258Q11 275 26 304T66 365T129 418T206 441Q233 441 239 440Q287 429 318 386T371 255Q385 195 385 170Q385 166 386 166L398 193Q418 244 443 300T486 391T508 430Q510 431 524 431H537Q543 425 543 422Q543 418 522 378T463 251T391 71Q385 55 378 6T357 -100Q341 -165 330 -190T303 -216Q286 -216 286 -188Q286 -138 340 32L346 51L347 69Q348 79 348 100Q348 257 291 317Q251 355 196 355Q148 355 108 329T51 260Q49 251 47 251Q45 249 31 249Z"></path><path id="MJX-1-TEX-N-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path id="MJX-1-TEX-N-3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path><path id="MJX-1-TEX-N-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path><path id="MJX-1-TEX-N-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path id="MJX-1-TEX-N-22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path><path id="MJX-1-TEX-I-1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path><path id="MJX-1-TEX-S4-239B" d="M837 1154Q843 1148 843 1145Q843 1141 818 1106T753 1002T667 841T574 604T494 299Q417 -84 417 -609Q417 -641 416 -647T411 -654Q409 -655 366 -655Q299 -655 297 -654Q292 -652 292 -643T291 -583Q293 -400 304 -242T347 110T432 470T574 813T785 1136Q787 1139 790 1142T794 1147T796 1150T799 1152T802 1153T807 1154T813 1154H819H837Z"></path><path id="MJX-1-TEX-S4-239D" d="M843 -635Q843 -638 837 -644H820Q801 -644 800 -643Q792 -635 785 -626Q684 -503 605 -363T473 -75T385 216T330 518T302 809T291 1093Q291 1144 291 1153T296 1164Q298 1165 366 1165Q409 1165 411 1164Q415 1163 416 1157T417 1119Q417 529 517 109T833 -617Q843 -631 843 -635Z"></path><path id="MJX-1-TEX-S4-239C" d="M413 -9Q412 -9 407 -9T388 -10T354 -10Q300 -10 297 -9Q294 -8 293 -5Q291 5 291 127V300Q291 602 292 605L296 609Q298 610 366 610Q382 610 392 610T407 610T412 609Q416 609 416 592T417 473V127Q417 -9 413 -9Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path><path id="MJX-1-TEX-N-22EE" d="M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z"></path><path id="MJX-1-TEX-N-22F1" d="M133 760Q133 784 150 802T193 820Q217 820 235 804T254 761Q254 736 237 718T194 700T151 717T133 760ZM580 460Q580 484 597 502T640 520Q664 520 682 504T701 461Q701 436 684 418T641 400T598 417T580 460ZM1027 160Q1027 184 1044 202T1087 220Q1111 220 1129 204T1148 161Q1148 136 1131 118T1088 100T1045 117T1027 160Z"></path><path id="MJX-1-TEX-S4-239E" d="M31 1143Q31 1154 49 1154H59Q72 1154 75 1152T89 1136Q190 1013 269 873T401 585T489 294T544 -8T572 -299T583 -583Q583 -634 583 -643T577 -654Q575 -655 508 -655Q465 -655 463 -654Q459 -653 458 -647T457 -609Q457 -58 371 340T100 1037Q87 1059 61 1098T31 1143Z"></path><path id="MJX-1-TEX-S4-23A0" d="M56 -644H50Q31 -644 31 -635Q31 -632 37 -622Q69 -579 100 -527Q286 -228 371 170T457 1119Q457 1161 462 1164Q464 1165 520 1165Q575 1165 577 1164Q582 1162 582 1153T583 1093Q581 910 570 752T527 400T442 40T300 -303T89 -626Q78 -640 75 -642T61 -644H56Z"></path><path id="MJX-1-TEX-S4-239F" d="M579 -9Q578 -9 573 -9T554 -10T520 -10Q466 -10 463 -9Q460 -8 459 -5Q457 5 457 127V300Q457 602 458 605L462 609Q464 610 532 610Q548 610 558 610T573 610T578 609Q582 609 582 592T583 473V127Q583 -9 579 -9Z"></path><path id="MJX-1-TEX-I-1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path><path id="MJX-1-TEX-N-22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path><path id="MJX-1-TEX-I-1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path><path id="MJX-1-TEX-I-1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path><path id="MJX-1-TEX-I-1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path><path id="MJX-1-TEX-I-1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path><path id="MJX-1-TEX-I-1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path><path id="MJX-1-TEX-I-1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path><path id="MJX-1-TEX-I-1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(500,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="msub" transform="translate(1000,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-1-TEX-I-1D456"></use></g></g></g><g data-mml-node="mo" transform="translate(2176.7,0)"><use data-c="3D" xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="msub" transform="translate(3232.5,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-1-TEX-I-1D456"></use></g></g></g><g data-mml-node="mo" transform="translate(4227.7,0)"><use data-c="2217" xlink:href="#MJX-1-TEX-N-2217"></use></g><g data-mml-node="mi" transform="translate(4949.9,0)"><use data-c="1D45D" xlink:href="#MJX-1-TEX-I-1D45D"></use></g><g data-mml-node="mo" transform="translate(5675.1,0)"><use data-c="2B" xlink:href="#MJX-1-TEX-N-2B"></use></g><g data-mml-node="msub" transform="translate(6675.3,0)"><g data-mml-node="mi"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="TeXAtom" transform="translate(484,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-1-TEX-I-1D456"></use></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7453.3,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7953.3,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8453.3,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8953.3,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="msub" transform="translate(9453.3,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-1-TEX-I-1D456"></use></g></g></g><g data-mml-node="mi" transform="translate(10352.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">已</text></g><g data-mml-node="mi" transform="translate(11352.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">知</text></g><g data-mml-node="mi" transform="translate(12352.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="773.5px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="mi" transform="translate(13352.3,0)"><use data-c="1D45D" xlink:href="#MJX-1-TEX-I-1D45D"></use></g><g data-mml-node="mi" transform="translate(13855.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(14855.3,0)"><use data-c="1D6FC" xlink:href="#MJX-1-TEX-I-1D6FC"></use></g><g data-mml-node="mi" transform="translate(15495.3,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(16495.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="773.5px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="msub" transform="translate(17495.3,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-1-TEX-I-1D456"></use></g></g></g><g data-mml-node="mi" transform="translate(18268.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(19268.2,0)"><use data-c="1D6FD" xlink:href="#MJX-1-TEX-I-1D6FD"></use></g><g data-mml-node="mi" transform="translate(19834.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(20834.2,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="773.5px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="msub" transform="translate(21834.2,0)"><g data-mml-node="mi"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="TeXAtom" transform="translate(484,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D456" xlink:href="#MJX-1-TEX-I-1D456"></use></g></g></g><g data-mml-node="mi" transform="translate(22612.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(23612.2,0)"><use data-c="1D6FE" xlink:href="#MJX-1-TEX-I-1D6FE"></use></g><g data-mml-node="mi" transform="translate(24155.2,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">位</text></g><g data-mml-node="mo" transform="translate(25155.2,0)"><use data-c="28" xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mi" transform="translate(25544.2,0)"><use data-c="1D6FE" xlink:href="#MJX-1-TEX-I-1D6FE"></use></g><g data-mml-node="mo" transform="translate(26364.9,0)"><g data-mml-node="text"><use data-c="3C" xlink:href="#MJX-1-TEX-N-3C"></use></g><g data-mml-node="text" transform="translate(778,0)"><use data-c="3C" xlink:href="#MJX-1-TEX-N-3C"></use></g></g><g data-mml-node="mi" transform="translate(28198.7,0)"><use data-c="1D6FC" xlink:href="#MJX-1-TEX-I-1D6FC"></use></g><g data-mml-node="mo" transform="translate(28838.7,0)"><use data-c="29" xlink:href="#MJX-1-TEX-N-29"></use></g><g data-mml-node="mo" transform="translate(29227.7,0)"><use data-c="2C" xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="mi" transform="translate(29672.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">求</text></g><g data-mml-node="mi" transform="translate(30672.4,0)"><use data-c="1D45D" xlink:href="#MJX-1-TEX-I-1D45D"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(31175.4,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(31675.4,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="mi" transform="translate(32175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">我</text></g><g data-mml-node="mi" transform="translate(33175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">们</text></g><g data-mml-node="mi" transform="translate(34175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(35175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">构</text></g><g data-mml-node="mi" transform="translate(36175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">造</text></g><g data-mml-node="mi" transform="translate(37175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">出</text></g><g data-mml-node="mi" transform="translate(38175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">如</text></g><g data-mml-node="mi" transform="translate(39175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">下</text></g><g data-mml-node="mi" transform="translate(40175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(41175.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">格</text></g><g data-mml-node="mi" transform="translate(42175.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="773.5px" font-family="serif" font-style="italic">：</text></g><g data-mml-node="mrow" transform="translate(43342,0)"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mtable" transform="translate(389,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="mo" transform="translate(882.6,0)"><use data-c="2C" xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(1327.2,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(2209.8,0)"><use data-c="2C" xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="mo" transform="translate(2654.4,0)"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g><g data-mml-node="mo" transform="translate(3993.1,0)"><use data-c="2C" xlink:href="#MJX-1-TEX-N-2C"></use></g><g data-mml-node="msub" transform="translate(4437.8,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-1-TEX-I-1D461"></use></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(5611,0)"><use data-c="29" xlink:href="#MJX-1-TEX-N-29"></use></g></g><g data-mml-node="mrow" transform="translate(49508.8,0)"><g data-mml-node="mo"><use data-c="239B" xlink:href="#MJX-1-TEX-S4-239B" transform="translate(0,5581)"></use><use data-c="239D" xlink:href="#MJX-1-TEX-S4-239D" transform="translate(0,-5591)"></use><svg width="875" height="9552" y="-4526" x="0" viewBox="0 2156.9 875 9552"><use data-c="239C" xlink:href="#MJX-1-TEX-S4-239C" transform="scale(1,23.11)"></use></svg></g><g data-mml-node="mtable" transform="translate(875,0)"><g data-mml-node="mtr" transform="translate(0,5985)"><g data-mml-node="mtd"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><use data-c="1D6FE" xlink:href="#MJX-1-TEX-I-1D6FE"></use></g></g></g><g data-mml-node="mtd" transform="translate(2356,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g></g></g><g data-mml-node="mtd" transform="translate(5142.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g></g></g></g><g data-mml-node="mtd" transform="translate(7595.1,0)"><g data-mml-node="mo"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g></g><g data-mml-node="mtd" transform="translate(10260.2,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-1-TEX-I-1D461"></use></g></g></g></g></g><g data-mml-node="mtr" transform="translate(0,4585)"><g data-mml-node="mtd" transform="translate(483.5,0)"></g></g><g data-mml-node="mtr" transform="translate(0,3185)"><g data-mml-node="mtd" transform="translate(233.5,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(1967,0)"><g data-mml-node="mo"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(778,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g><g data-mml-node="mtd" transform="translate(5396.8,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(7595.1,0)"><g data-mml-node="mo"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g></g><g data-mml-node="mtd" transform="translate(10465.3,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,1785)"><g data-mml-node="mtd" transform="translate(483.5,0)"></g></g><g data-mml-node="mtr" transform="translate(0,385)"><g data-mml-node="mtd" transform="translate(233.5,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(2610.2,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(4753.5,0)"><g data-mml-node="mo"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(778,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g><g data-mml-node="mtd" transform="translate(7595.1,0)"><g data-mml-node="mo"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g></g><g data-mml-node="mtd" transform="translate(10465.3,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="mtr" transform="translate(0,-1015)"><g data-mml-node="mtd" transform="translate(483.5,0)"></g></g><g data-mml-node="mtr" transform="translate(0,-3185)"><g data-mml-node="mtd" transform="translate(344.5,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><use data-c="22EE" xlink:href="#MJX-1-TEX-N-22EE"></use></g></g></g><g data-mml-node="mtd" transform="translate(2721.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><use data-c="22EE" xlink:href="#MJX-1-TEX-N-22EE"></use></g></g></g><g data-mml-node="mtd" transform="translate(5507.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><use data-c="22EE" xlink:href="#MJX-1-TEX-N-22EE"></use></g></g></g><g data-mml-node="mtd" transform="translate(7540.1,0)"><g data-mml-node="mo"><use data-c="22F1" xlink:href="#MJX-1-TEX-N-22F1"></use></g></g><g data-mml-node="mtd" transform="translate(10576.3,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><use data-c="22EE" xlink:href="#MJX-1-TEX-N-22EE"></use></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-4585)"><g data-mml-node="mtd" transform="translate(483.5,0)"></g></g><g data-mml-node="mtr" transform="translate(0,-5985)"><g data-mml-node="mtd" transform="translate(233.5,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(2610.2,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(5396.8,0)"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g><g data-mml-node="mtd" transform="translate(7595.1,0)"><g data-mml-node="mo"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g></g><g data-mml-node="mtd" transform="translate(9822.1,0)"><g data-mml-node="mo"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(778,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(12483.6,0)"><use data-c="239E" xlink:href="#MJX-1-TEX-S4-239E" transform="translate(0,5581)"></use><use data-c="23A0" xlink:href="#MJX-1-TEX-S4-23A0" transform="translate(0,-5591)"></use><svg width="875" height="9552" y="-4526" x="0" viewBox="0 2156.9 875 9552"><use data-c="239F" xlink:href="#MJX-1-TEX-S4-239F" transform="scale(1,23.11)"></use></svg></g></g><g data-mml-node="mo" transform="translate(63145.1,0)"><use data-c="3D" xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mrow" transform="translate(64200.9,0)"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mtable" transform="translate(389,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msup" transform="translate(882.6,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><use data-c="1D6FE" xlink:href="#MJX-1-TEX-I-1D6FE"></use></g></g></g><g data-mml-node="mtd" transform="translate(2849.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msub" transform="translate(882.6,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(2113.3,0)"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(3113.6,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="msub" transform="translate(3996.1,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g><g data-mml-node="mtd" transform="translate(8854.2,0)"><g data-mml-node="mo"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g></g><g data-mml-node="mtd" transform="translate(11026.2,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msub" transform="translate(882.6,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-1-TEX-I-1D461"></use></g></g></g><g data-mml-node="mo" transform="translate(2015,0)"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(3015.3,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-1-TEX-I-1D461"></use></g></g></g><g data-mml-node="msub" transform="translate(3799.5,0)"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"></use></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(16223.3,0)"><use data-c="29" xlink:href="#MJX-1-TEX-N-29"></use></g></g><g data-mml-node="mo" transform="translate(81091,0)"><use data-c="3D" xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mrow" transform="translate(82146.7,0)"><g data-mml-node="mo"><use data-c="28" xlink:href="#MJX-1-TEX-N-28"></use></g><g data-mml-node="mtable" transform="translate(389,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msup" transform="translate(882.6,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><use data-c="1D6FE" xlink:href="#MJX-1-TEX-I-1D6FE"></use></g></g></g><g data-mml-node="mtd" transform="translate(2849.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msub" transform="translate(882.6,0)"><g data-mml-node="mi"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="TeXAtom" transform="translate(484,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="mo" transform="translate(1992.3,0)"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(2992.6,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"></use></g></g></g><g data-mml-node="msub" transform="translate(3875.1,0)"><g data-mml-node="mi"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="TeXAtom" transform="translate(484,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g><g data-mml-node="mtd" transform="translate(8612.2,0)"><g data-mml-node="mo"><use data-c="22EF" xlink:href="#MJX-1-TEX-N-22EF"></use></g></g><g data-mml-node="mtd" transform="translate(10784.2,0)"><g data-mml-node="msub"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msub" transform="translate(882.6,0)"><g data-mml-node="mi"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="TeXAtom" transform="translate(484,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-1-TEX-I-1D461"></use></g></g></g><g data-mml-node="mo" transform="translate(1894,0)"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"></use></g><g data-mml-node="msub" transform="translate(2894.3,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D461" xlink:href="#MJX-1-TEX-I-1D461"></use></g></g></g><g data-mml-node="msub" transform="translate(3678.5,0)"><g data-mml-node="mi"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="TeXAtom" transform="translate(484,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g></g></g></g><g data-mml-node="mo" transform="translate(15739.3,0)"><use data-c="29" xlink:href="#MJX-1-TEX-N-29"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(98275,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(98775,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="mi" transform="translate(99275,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">记</text></g><g data-mml-node="mi" transform="translate(100275,0)"><use data-c="1D434" xlink:href="#MJX-1-TEX-I-1D434"></use></g><g data-mml-node="mo" transform="translate(101247.2,0)"><use data-c="22C5" xlink:href="#MJX-1-TEX-N-22C5"></use></g><g data-mml-node="mi" transform="translate(101747.4,0)"><use data-c="1D440" xlink:href="#MJX-1-TEX-I-1D440"></use></g><g data-mml-node="mo" transform="translate(103076.2,0)"><use data-c="3D" xlink:href="#MJX-1-TEX-N-3D"></use></g><g data-mml-node="mi" transform="translate(104132,0)"><use data-c="1D435" xlink:href="#MJX-1-TEX-I-1D435"></use></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(104891,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(105391,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(105891,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(106391,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="mi" transform="translate(106891,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">使</text></g><g data-mml-node="mi" transform="translate(107891,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(108891,0)"><use data-c="1D43F" xlink:href="#MJX-1-TEX-I-1D43F"></use></g><g data-mml-node="mi" transform="translate(109572,0)"><use data-c="1D43F" xlink:href="#MJX-1-TEX-I-1D43F"></use></g><g data-mml-node="mi" transform="translate(110253,0)"><use data-c="1D43F" xlink:href="#MJX-1-TEX-I-1D43F"></use></g><g data-mml-node="mi" transform="translate(110934,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">算</text></g><g data-mml-node="mi" transform="translate(111934,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">法</text></g><g data-mml-node="mi" transform="translate(112934,0)"><use data-c="1D45F" xlink:href="#MJX-1-TEX-I-1D45F"></use></g><g data-mml-node="mi" transform="translate(113385,0)"><use data-c="1D452" xlink:href="#MJX-1-TEX-I-1D452"></use></g><g data-mml-node="mi" transform="translate(113851,0)"><use data-c="1D451" xlink:href="#MJX-1-TEX-I-1D451"></use></g><g data-mml-node="mi" transform="translate(114371,0)"><use data-c="1D462" xlink:href="#MJX-1-TEX-I-1D462"></use></g><g data-mml-node="mi" transform="translate(114943,0)"><use data-c="1D450" xlink:href="#MJX-1-TEX-I-1D450"></use></g><g data-mml-node="mi" transform="translate(115376,0)"><use data-c="1D452" xlink:href="#MJX-1-TEX-I-1D452"></use></g><g data-mml-node="mi" transform="translate(115842,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">后</text></g><g data-mml-node="mi" transform="translate(116842,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">得</text></g><g data-mml-node="mi" transform="translate(117842,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="773.5px" font-family="serif">到</text></g><g data-mml-node="msub" transform="translate(118842,0)"><g data-mml-node="mi"><use data-c="1D45E" xlink:href="#MJX-1-TEX-I-1D45E"></use></g><g data-mml-node="TeXAtom" transform="translate(479,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="30" xlink:href="#MJX-1-TEX-N-30"></use></g></g></g><g data-mml-node="msup" transform="translate(119724.5,0)"><g data-mml-node="mn"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g><g data-mml-node="mi" transform="translate(533,413) scale(0.707)"><use data-c="1D6FE" xlink:href="#MJX-1-TEX-I-1D6FE"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(120691.5,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(121191.5,0)"><g data-mml-node="mo"><use data-c="24" xlink:href="#MJX-1-TEX-N-24"></use></g></g></g></g></svg></mjx-container></p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br>a = <span class="hljs-number">8701503235714654181185975273305680319448268607104190359674542225022655504341996813364987486169152127280096580678162752030947290834318177794541896954989271</span><br>b = <span class="hljs-number">11640974551844877011136648424234569173281653283747272384285516963171073747658473313135494572290659149574841279909831065905755830907871430395394192735120939</span><br>m = <span class="hljs-number">7651549587843496463117202160482742226772973264122759524886479760482818128954449531195306323978761655786591285266609745774698650146578870594639510913805479</span><br>x = [<span class="hljs-number">23563826257718036440881317978673493810188106618102520794655809928555314811814029255966876253402519249737774672905329476492580161006527218026276548977886854950706391688637172839603715626748806618948958120644922647579126548959357008290497206695049760059149700363820646498084623694699472008631562172184210990035</span>, <span class="hljs-number">3113005430387527533023833300074500344357411532196342594002333236043816936302383608121940600702403163729786511802565803292142196335022994287751246769720617053925208039944042040670715259430068885488425648174582570328145049091823098815555090797666441011003507212742628216858263620482201418649823989017197834548</span>, <span class="hljs-number">6685479348073624502298121671534447705198177679782557105411467941369499437275400769469476486244770244844157821246716057708486824467234913104323190236794137920462993829477758373642412459677991492568200799570944294995694562592195858546636130648217228199436582187668528189147363195874596098090285349084227175548</span>, <span class="hljs-number">5239278303771955200403570451522564788180173532702160613414703002800320194961524203966622178324143348005313508702908594363287064236029432480748237226351482819059842053241222649049479134305843222159009334475944430484535918632919061089312813083990061343788537195597234369581898788642048806729865452838925446631</span>, <span class="hljs-number">6925083281090878674631701308341591801761921950839467193956461332365235701986587936731727133742351637156387143047408611637157566826208443914739489121644396744336707147012051411027678283619591917523171947099618995459141630255424338090872202325514203847254434442912426610649523183909748408668183830601718981590</span>]<br>r = <span class="hljs-number">64</span><br>A = [[<span class="hljs-number">2</span>**<span class="hljs-number">64</span>,x[<span class="hljs-number">1</span>],x[<span class="hljs-number">2</span>],x[<span class="hljs-number">3</span>],x[<span class="hljs-number">4</span>]],<br>     [<span class="hljs-number">0</span>,-x[<span class="hljs-number">0</span>],<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],<br>     [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,-x[<span class="hljs-number">0</span>],<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],<br>     [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,-x[<span class="hljs-number">0</span>],<span class="hljs-number">0</span>],<br>     [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,-x[<span class="hljs-number">0</span>]]]<br>A = Matrix(ZZ,A)    <br>A.LLL()<br>q0 = <span class="hljs-built_in">abs</span>(lis[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]//<span class="hljs-number">2</span>**<span class="hljs-number">64</span>)<br>p =x[<span class="hljs-number">0</span>]//q0<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br>a =  <span class="hljs-number">8701503235714654181185975273305680319448268607104190359674542225022655504341996813364987486169152127280096580678162752030947290834318177794541896954989271</span><br>b =  <span class="hljs-number">11640974551844877011136648424234569173281653283747272384285516963171073747658473313135494572290659149574841279909831065905755830907871430395394192735120939</span><br>n =  <span class="hljs-number">7651549587843496463117202160482742226772973264122759524886479760482818128954449531195306323978761655786591285266609745774698650146578870594639510913805479</span><br><br>ans = gmpy2.invert(a,n)<br>seed = p <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>    seed = (ans*(seed - b)) % n <br>flag = long_to_bytes(seed)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#flag&#123;ACD_and_LCG_are_go0d_fri3nds&#125;</span><br></code></pre></td></tr></table></figure><h2 id="DSA"><a href="#DSA" class="headerlink" title="DSA"></a>DSA</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>stack</title>
    <link href="/2024/03/19/stack/"/>
    <url>/2024/03/19/stack/</url>
    
    <content type="html"><![CDATA[<h1 id="初识栈"><a href="#初识栈" class="headerlink" title="初识栈"></a>初识栈</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>&#39;python_practice&#39;</title>
    <link href="/2024/03/13/python-practice/"/>
    <url>/2024/03/13/python-practice/</url>
    
    <content type="html"><![CDATA[<h1 id="对于函数的理解"><a href="#对于函数的理解" class="headerlink" title="对于函数的理解"></a>对于函数的理解</h1><p>[TOC]</p><h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>通过写一串代码块，来定义出自己想到的解决问题的方法，不要将函数都写到主函数中！</p><h3 id="关于传参"><a href="#关于传参" class="headerlink" title="关于传参"></a>关于传参</h3><p>在函数中参数分为形参和实参，一般的形参没有任何意义{()里面的参数名}，实参是传进去的一个实际变量。</p><h2 id="函数递归"><a href="#函数递归" class="headerlink" title="函数递归"></a>函数递归</h2><p>函数的递归本质来说就是在自己定义的函数中继续调用自己，每调用一层就意味着要进入一层新的循环。而且递归函数都有其自己的结束条件，也就是在遇到阻碍自己的障碍物之前会一直进行递推。那么该阻碍递推的障碍物就是其结束条件。因此递归有两个要素：递归关系 和 结束条件。</p><p>特别的    递归的时候，每次调用一个函数，计算机都会为这个函数分配新的空间，这就是说，当被调函数返回的时候，调用函数中的变量依然会保持原先的值，否则也不可能实现反向输出。</p><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><p>因为斐波那契数列是第三个数等于前两个数之和，那么我们就有两种思路，一种就是根据正常的函数写法，一个就是递归思想。这里第一种方法只给出脚本，重点在于递归函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    a, b = <span class="hljs-number">0</span>, <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        a, b = b, a + b<br>        <span class="hljs-keyword">yield</span> a<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">yield 关键字在python中是一种定义生成器的方式，将一个普通函数改造成生成函数。</span><br><span class="hljs-string">简单理解来说yield就是return返回一个值，并且记住返回值的位置，下次直接从这个位置开始。</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> val <span class="hljs-keyword">in</span> fib(<span class="hljs-number">20</span>):<br>    <span class="hljs-built_in">print</span>(val)<br><br></code></pre></td></tr></table></figure><p>递归函数:</p><p>根据斐波那契数列的定义f(n) &#x3D; f(n-1)+f(n-2)。</p><p>这里的函数就是在自己定义的函数中不断进行调用自己，直到遇到自己的结束条件停止。就是工作原理如下图所示。</p><p><img src="https://img2.imgtp.com/2024/03/18/S56ycdlM.png" alt="65f2ab6278d63d6da80a27eb4a033c59.png"></p><p>然后思路就非常明确了，就是我们可以在函数中进行调用自己，通过函数递归就能够实现这行代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> <span class="hljs-keyword">if</span> n &lt;= <span class="hljs-number">2</span> <span class="hljs-keyword">else</span> fib(n - <span class="hljs-number">1</span>) + fib(n - <span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(fib(<span class="hljs-number">5</span>)))<br><span class="hljs-comment">#这串代码是通过函数递归得到第n位的斐波那契值</span><br></code></pre></td></tr></table></figure><h3 id="函数递归的特点"><a href="#函数递归的特点" class="headerlink" title="函数递归的特点"></a>函数递归的特点</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 每一级函数调用时都有自己的变量，但是函数代码并不会得到复制，如计算5的阶乘时每递推一次变量都不同；<br><span class="hljs-bullet">2.</span> 每次调用都会有一次返回，如计算5的阶乘时每递推一次都返回进行下一次；<br><span class="hljs-bullet">3.</span> 递归函数中，位于递归调用前的语句和各级被调用函数具有相同的执行顺序；<br><span class="hljs-bullet">4.</span> 递归函数中，位于递归调用后的语句的执行顺序和各个被调用函数的顺序相反；<br><span class="hljs-bullet">5.</span> 递归函数中必须有终止语句。<br><br></code></pre></td></tr></table></figure><p>总而言之：递归就是进行一次自我调用且拥有完成体。</p><p>对于函数递归来说因为是不断调用函数的内存，也就是说是一种栈的应用：</p><h4 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h4><p>1.系统栈（也叫核心栈、内核栈）<br>是内存中属于操作系统空间的一块区域，其主要用途为： (1)保存中断现场，对于嵌套中断，被中断程序的现场信息依次压入系统栈，中断返回时逆序弹出； (2)保存操作系统子程序间相互调用的参数、返回值、返回点以及子程序(函数)的局部变量。</p><p>2.用户栈<br>是用户进程空间中的一块区域，用于保存用户进程的子程序间相互调用的参数、返回值、返回点以及子程序(函数)的局部变量。<br>我们编写的递归程序属于用户程序，因此使用的是用户栈。</p><p>3.栈溢出<br>函数调用的参数是通过栈空间来传递的，在调用过程中会占用线程的栈资源。而递归调用，只有走到最后的结束点后函数才能依次退出，而未到达最后的结束点之前，占用的栈空间一直没有释放，如果递归调用次数过多，就可能导致占用的栈资源超过线程的最大值，从而导致栈溢出，导致程序的异常退出。</p><p>因此我们可以知道每次函数递归，对于函数本身来说需要保存的内容就包括（局部变量，形参，调用的函数地址，返回值)，因此被调用n次函数就会产生n次函数值，那么运行效率也就不如直接写循环了。</p><p><strong>循环能干的事,递归都能干;递归能干的循环不一定能干</strong>！！！</p>]]></content>
    
    
    <categories>
      
      <category>函数递归</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>posts</title>
    <link href="/2024/03/07/posts/"/>
    <url>/2024/03/07/posts/</url>
    
    <content type="html"><![CDATA[<p>test for latex</p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="13.088ex" height="4.968ex" role="img" focusable="false" viewBox="0 -1509.9 5785.1 2195.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path><path id="MJX-1-TEX-I-1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path><path id="MJX-1-TEX-N-2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path id="MJX-1-TEX-N-2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-1-TEX-I-1D44E"></use></g><g data-mml-node="mi" transform="translate(529,0)"><use data-c="1D44F" xlink:href="#MJX-1-TEX-I-1D44F"></use></g><g data-mml-node="mo" transform="translate(1235.8,0)"><use data-c="2264" xlink:href="#MJX-1-TEX-N-2264"></use></g><g data-mml-node="mfrac" transform="translate(2291.6,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D44E" xlink:href="#MJX-1-TEX-I-1D44E"></use></g><g data-mml-node="mn" transform="translate(562,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g></g><g data-mml-node="mo" transform="translate(1187.8,0)"><use data-c="2B" xlink:href="#MJX-1-TEX-N-2B"></use></g><g data-mml-node="msup" transform="translate(2188,0)"><g data-mml-node="mi"><use data-c="1D44F" xlink:href="#MJX-1-TEX-I-1D44F"></use></g><g data-mml-node="mn" transform="translate(462,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g></g></g><g data-mml-node="mn" transform="translate(1496.8,-686)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"></use></g><rect width="3253.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>]]></content>
    
    
    <categories>
      
      <category>test latex</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>HELLO</title>
    <link href="/2024/03/06/HELLO/"/>
    <url>/2024/03/06/HELLO/</url>
    
    <content type="html"><![CDATA[<p>welcome to my blog,it is worthwhile creating it.</p><p><img src="https://img2.imgtp.com/2024/03/06/th192Bhi.png"></p>]]></content>
    
    
    <categories>
      
      <category>hello</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/06/hello-world/"/>
    <url>/2024/03/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
